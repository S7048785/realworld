<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.realworld.mapper.ArticleMapper">

    <resultMap id="articleCardMap" type="com.realworld.vo.ArticleCardVO">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="body" property="body"/>
        <result column="like_count" property="likeCount"/>
        <result column="favorites_count" property="favoritesCount"/>
        <result column="created_at" property="createdAt"/>
        <result column="liked" property="liked"/>
        <result column="favorited" property="favorited"/>
        <result column="username" property="username"/>
        <result column="avatar" property="avatar"/>
        <collection property="tagList" ofType="java.lang.String">
            <result column="tag_name"/>
        </collection>
    </resultMap>
    <select id="selectListArticleCard" resultMap="articleCardMap"
            parameterType="com.realworld.dao.ArticlePageQueryDTO">
        select
        article.id as id,
        article.title as title,
        article.description as `description`,
        article.body as `body`,
        article.like_count as like_count,
        article.favorites_count as favorites_count,
        article.created_at as created_at,
        user.username as username,
        user.avatar as avatar,
        tags.name as tag_name,
        IFNULL(article_favorites.is_del, 1) as favorited,
        IFNULL(article_like.is_del, 1) as liked

        from article
        left join article_tags on article.id = article_tags.article_id
        left join tags on article_tags.tag_id = tags.id
        left join user on article.author_id = user.id
        left join article_like on article.id = article_like.article_id
        left join article_favorites on article.id = article_favorites.article_id
        <if test="userId != null">
            left join user_follow on user_follow.user_id = #{userId}
        </if>
        <where>
            <if test="userId != null">
                user_follow.user_id = #{userId} and user_follow.is_del = 0 and user.id != #{userId} and
            </if>
            <if test="articlePageQueryDTO.authorId != null">
                user.id = #{articlePageQueryDTO.author} and
            </if>
            <if test="articlePageQueryDTO.tagList != null and !articlePageQueryDTO.tagList.isEmpty()">
                tags.name in
                (<foreach collection="tagList" item="tag" separator=",">
                #{tag}
                </foreach>)
                and
            </if>
             article.is_del = 0
        </where>
        order by article.created_at desc

    </select>
</mapper>