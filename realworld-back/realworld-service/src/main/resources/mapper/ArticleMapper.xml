<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.realworld.mapper.ArticleMapper">

    <select id="selectListArticleCard" resultType="com.realworld.vo.ArticleCardVO"
            parameterType="com.realworld.dto.ArticlePageQueryDTO">
        select
            a.id as id,
            a.title as title,
            a.body as `body`,
            a.description as `description`,
            count(distinct al.id) as like_count,
            count(distinct af.id)  as favorites_count,
            a.created_at as created_at,
            user.username as author,
            user.avatar as avatar,
            GROUP_CONCAT(DISTINCT tags.name SEPARATOR ',') as tags,
            MAX(IF(al.user_id = #{userId}, 1, 0)) as liked,
            MAX(IF(af.user_id = #{userId}, 1, 0)) as favorited
        from article as a
            join user on a.author_id = user.id
            left join article_tags as at on a.id = at.article_id and at.is_del = 0
            left join tags on at.tag_id = tags.id
            left join article_like as al on a.id = al.article_id and al.is_del = 0
            left join article_favorites as af on a.id = af.article_id and af.is_del = 0
        <where>
            <if test="userId != null or userId">
                user.id != #{userId} and
            </if>
            a.is_del = 0
        </where>
        GROUP BY
            a.id, a.title, a.description, a.created_at
        <if test="articlePageQueryDTO.tagList != null">
            having
            <foreach collection="articlePageQueryDTO.tagList" item="tag" separator="or" close="">
                tags like concat('%', #{tag}, '%')
            </foreach>
        </if>
        order by a.created_at desc
          limit #{articlePageQueryDTO.limit}, #{articlePageQueryDTO.offset}
    </select>


    <select id="selectArticle" resultType="com.realworld.vo.ArticleVO">
        select
            a.id as id,
            a.title as title,
            a.description as `description`,
            a.body as `body`,
            a.created_at as created_at,
            group_concat(DISTINCT t.name) as tags,

            (select COUNT(*) from article_like as al where al.article_id = a.id and al.is_del = 0) as like_count,
            (select COUNT(*) from article_favorites as af where af.article_id = a.id and af.is_del = 0) as favorites_count,
            (select COUNT(*) from article_comment as ac where ac.article_id = a.id and ac.is_del = 0) as comment_count

        from article as a
                 left join article_tags as at on a.id = at.article_id and at.is_del = 0
                 left join tags as t on at.tag_id = t.id
        where a.id = #{id} and a.is_del = 0

    </select>
</mapper>